version: '3.1'

services:
  php-fpm:
    container_name: php
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    volumes:
      - ./src/symfony:/var/www/html/symfony
    networks:
      - psmmr

  nginx:
    container_name: nginx
    image: nginx:stable
    ports:
      - '81:81'
    volumes:
      - ./src/symfony:/var/www/html/symfony
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - psmmr

  db:
    container_name: mysql
    image: mysql:8.0.32
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - 3306:3306
    volumes:
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - psmmr


  adminer:
    container_name: adminer
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: database
      ADMINER_DESIGN: haeckel
      ADMINER_PLUGINS: tables-filter tinymce
    ports:
      - 33061:8080
    networks:
      - psmmr

  mailhog:
    container_name: mailhog
    image: 'mailhog/mailhog:latest'
    restart: unless-stopped
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - psmmr

  redis:
    container_name: redis
    image: 'redis:7-alpine'
    restart: unless-stopped
    command:
      [
        "redis-server",
        "--bind",
        "0.0.0.0",
        "--appendonly",
        "yes"
      ]
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
    volumes:
      - ./docker/redis:/data
    networks:
      - psmmr

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672 # web ui
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest    
    volumes:
        - ./docker/rabbitmq/data/:/var/lib/rabbitmq/
        - ./docker/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - psmmr

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    # 8.x
    environment: ['CLI_JAVA_OPTS=-Xms2g -Xmx2g','bootstrap.memory_lock=true','discovery.type=single-node','xpack.security.enabled=false', 'xpack.security.enrollment.enabled=false']
    ports:
      - 9200:9200
    networks:
      - psmmr
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:    
      resources:
          limits:
            cpus: '2.0'
          reservations:
            cpus: '1.0'

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    environment:
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa
    ports:
      - 5601:5601
    networks:
      - psmmr
    deploy:    
      resources:
          limits:
            cpus: '2.0'
          reservations:
            cpus: '1.0'

networks:
  psmmr:
    driver: bridge